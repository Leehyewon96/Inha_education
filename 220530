/*
오름차순으로 배열의 값을 받아 배열에 저장한 후 숫자를 입력받아 그 숫자가 배열의 몇번째에 들어있는지 출력하기.
(단, 배열에서 중복된 숫자가 있을 경우 가장 앞에 있는 배열의 값으로 출력하기.)
*/


#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cmath>
#include <algorithm>

using namespace std;

int n, cnt = 0;
void* bsearchx(const void* n, const void* arr, size_t s, size_t size, int(*compar)(const void*, const void*));
void draw(int k);
int linear(size_t start, size_t end, const void* arr);

int int_cmp(const void* a, const void* b)
{
	if (*(int*)a < *(int*)b)
		return -1;
	else if (*(int*)a > *(int*)b)
		return 1;
	else
		return 0;
}

int main()
{
    int s;
    cout << "배열의 개수를 입력하세요 : ";
    cin >> s;

    int* arr = new int [s];

    cout << "배열요소를 입력하세요 : ";
    for (int i = 0; i < s; i++)
    {
        cout << "arr[" << i << "] : ";
        cin >> arr[i];
    }

    cout << "찾을 숫자를 입력하세요 : ";
    cin >> n;

    bsearchx(&n, arr, s, sizeof(int), int_cmp);

    delete[] arr;
    return 0;
}
//               검색값 포인터		배열	         갯수			요소 크기            비교 함수
void* bsearchx(const void* n, const void* arr, size_t s, size_t size, int(*compar)(const void*, const void*))
{
    int preK0 = 0;
    int preK = s;
    int cnt = 0, cntS= 0;
    int k = 0;
    while(k < s)
    {
        if( (*compar)((void*)((int (*))arr + k), n) == 0 )
        {
            if (linear(0, k, (int*)arr) == -1)
            {
                cout << k << "번째 배열에 존재하는 숫자입니다." << endl;
                cnt++;
                break;
            }
            else
            {
                cout << linear(0, k, (int*)arr) << "번째 배열에 존재하는 숫자입니다." << endl;
                cnt++;
                break;
            }
        }
        else if ((*compar)((void*)((int(*))arr + k), n) == -1)
        {
            if (k == (k + preK) / 2)
                cntS++;

            preK0 = k;
            k = (k + preK) / 2;
        }
        else
        {
            if (k == (k + preK) / 2)
                cntS++;

            preK = k;
            k = (k + preK0) / 2;
        }

        if (cntS == 2)
            break;
    }

    if (cnt == 0)
    {
        cout << "존재하지 않습니다." << endl;
    }

    return (void*)0;
}

int linear(size_t start, size_t end, const void* arr)
{
	for (int i = start; i < end; i++)
	{
        if (*((int*)arr+i) == n)
        {
            return i;
        }
	}

    return -1;
}
